// generate hashkeys_generated.rs

fn random_array_u64(label: &str) {
    let mut a: [u64; 64] = [0u64; 64];
    for x in &mut a {
        *x = rand::random::<u64>();
    }
    println!("pub const {label}: [u64;64] = {:?};", a);
}

fn main() {
    println!("// Hash values generated by bin/build_hashkeys.rs\n");
    random_array_u64("R1_HASH");
    random_array_u64("R2_HASH");
    random_array_u64("N1_HASH");
    random_array_u64("N2_HASH");
    random_array_u64("B1_HASH");
    random_array_u64("B2_HASH");
    random_array_u64("K1_HASH");
    random_array_u64("K2_HASH");
    random_array_u64("Q1_HASH");
    random_array_u64("Q2_HASH");
    random_array_u64("P1_HASH");
    random_array_u64("P2_HASH");
    random_array_u64("NIL_HASH");
    println!("pub const WHITE_HASH: u64={};", rand::random::<u64>());
}
